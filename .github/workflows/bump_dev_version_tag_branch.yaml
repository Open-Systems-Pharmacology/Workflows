# This reusable workflow will, if triggered by a merge:
#  - Bump version if the current version is development (x.y.z.9000+) & if functionnal changes are detected.
#  - Tag the target branch with version number
name: bump-dev-version

on:
  workflow_call:
    inputs:
      app-id:
        type: string
        required: true
    secrets:
      private-key:
          required: true

jobs:
  detect-changes:
    if: github.event_name != 'pull_request'
    concurrency: #prevent concurrent runs
      group: ${{ github.workflow }}
    runs-on: ubuntu-latest
    outputs:
      run_next_job: ${{ steps.set_output.outputs.run_next_job }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        uses: tj-actions/changed-files@v45
        with:
          files: |
            NAMESPACE
            R/**
            inst/**
            man/**
            vignettes/**

      - name: Changes detected
        id: set_output
        if: steps.changes.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changes.outputs.all_changed_files }}
        run: | #echo a notice with a list of changed files
          list=''
          for file in ${ALL_CHANGED_FILES}; do
            list+="\t- $file,\n"
          done 
          echo -e "::notice::Detected changes in files, Version will be bumped. List of changes:\n$list"
          echo "run_next_job=true" >> $GITHUB_OUTPUT

      - name: No changes
        if: steps.changes.outputs.any_changed != 'true'
        run: |
          echo "No functionalchanges detected, version will not be bumped"
          echo "run_next_job=false" >> $GITHUB_OUTPUT

  bump-dev-version:
    needs: detect-changes
    if: needs.detect-changes.outputs.run_next_job == 'true'
    concurrency: #prevent concurrent runs
      group: ${{ github.workflow }}
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions: write-all
    steps:

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.private-key }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install packages
        run: |
          install.packages("usethis")
        shell: Rscript {0}

      - name: Change DESCRIPTION file
        run: |
          if(usethis:::is_dev_version()){
            desc::desc_set_version(version = usethis:::bump_version()[["dev"]])
          }
        shell: Rscript {0}

      - name: Get package version from DESCRIPTION file and set as environment variable
        run: |
            echo "PKG_VERSION=$(Rscript -e 'cat(as.character(desc::desc_get_version()))')" >> $GITHUB_ENV
        shell: bash

      - uses: EndBug/add-and-commit@v9
        if: ${{ success() }}
        with:
          message: 'ðŸ¤– Bump version. [skip actions]'
          default_author: github_actions
          add: 'DESCRIPTION'

      - uses: thejeff77/action-push-tag@v1.0.0
        if: ${{ success() }}
        with:
          tag: v${{ env.PKG_VERSION }}
          force: true